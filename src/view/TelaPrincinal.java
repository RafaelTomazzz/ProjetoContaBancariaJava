/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import service.ContaService;
import model.ContaCorrente;
import java.util.*;
import java.util.function.Predicate;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
/**
 *
 * @author CG3033791
 */
public class TelaPrincinal extends javax.swing.JFrame {

    ContaService contaService = new ContaService();
    
    public TelaPrincinal() {
        initComponents();
        ListarContas();
        MostrarContas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        FiltroButtonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        InputTexto = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        LabelContaSelecionada = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        LabelContas = new javax.swing.JLabel();
        FilterButton = new javax.swing.JButton();
        ate5000 = new javax.swing.JRadioButton();
        ate10000 = new javax.swing.JRadioButton();
        acima10000 = new javax.swing.JRadioButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conta Bancária");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Lista de Contas:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Selecione uma conta pelo número:");

        InputTexto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        InputTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Filtrar(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Selecionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecionarConta(evt);
            }
        });

        LabelContaSelecionada.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        LabelContaSelecionada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelContaSelecionada.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("SACAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowSacar(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setText("DEPOSITAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowDepositar(evt);
            }
        });

        LabelContas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LabelContas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelContas.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane3.setViewportView(LabelContas);

        FilterButton.setText("Filtrar");
        FilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Filtrar(evt);
            }
        });

        FiltroButtonGroup.add(ate5000);
        ate5000.setText("Até R$5000");
        ate5000.setActionCommand("ate5000");
        ate5000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ate5000ActionPerformed(evt);
            }
        });

        FiltroButtonGroup.add(ate10000);
        ate10000.setText("Até R$10000");
        ate10000.setActionCommand("ate10000");

        FiltroButtonGroup.add(acima10000);
        acima10000.setText("Acima de R$10000");
        acima10000.setActionCommand("acima10000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addComponent(LabelContaSelecionada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(InputTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(FilterButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ate5000)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ate10000)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acima10000)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FilterButton)
                    .addComponent(ate5000)
                    .addComponent(ate10000)
                    .addComponent(acima10000))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelContaSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SelecionarConta(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecionarConta
        int numero = Integer.parseInt(InputTexto.getText());
        
        ContaCorrente conta = contaService.selecionarConta(numero);
        LabelContaSelecionada.setText("Titular: " + conta.getTitular() + " - Numero: " + conta.getNumero() + " - Saldo: " + conta.getSaldo());
    }//GEN-LAST:event_SelecionarConta

    private void ShowDepositar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowDepositar
        String texto = LabelContaSelecionada.getText();
        String[] txt = texto.split("Numero: ");
        String[] numero = txt[1].split(" ");
        
        Depositar depositar = new Depositar(numero[0]);
        depositar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ShowDepositar

    private void ShowSacar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowSacar
        String texto = LabelContaSelecionada.getText();
        String[] txt = texto.split("Numero: ");
        String[] numero = txt[1].split(" ");
        
        Sacar sacar = new Sacar(numero[0]);
        sacar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ShowSacar

    private void ate5000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ate5000ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ate5000ActionPerformed

    private void Filtrar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Filtrar
        ArrayList<ContaCorrente> contas = contaService.lerContas();
        List<ContaCorrente> lista = new ArrayList<ContaCorrente>();
        String filtro = FiltroButtonGroup.getSelection().getActionCommand();
        StringBuilder texto = new StringBuilder("<html>");
        
        switch(filtro){
            case "ate5000":
                lista = contas.stream()
                            .filter(conta -> conta.saldo <= 5000)
                            .collect(Collectors.toList());
               
                break;
                
            case "ate10000":
                lista = contas.stream()
                            .filter(conta -> conta.saldo > 5000 && conta.saldo <= 10000)
                            .collect(Collectors.toList());
                
                break;
                
            case "acima10000":
                lista = contas.stream()
                            .filter(conta -> conta.saldo > 10000)
                            .collect(Collectors.toList());                
                
                break;
        }
                        
        for(ContaCorrente conta : lista){
            texto.append("Titular: " + conta.getTitular() + " - Numero: " + conta.getNumero() + " - Saldo: " + conta.getSaldo() + "<br>");      
        }
        
        LabelContas.setText(texto.toString());
    }//GEN-LAST:event_Filtrar

    private void ListarContas(){
        ArrayList<ContaCorrente> contas = contaService.lerContas();
        
        StringBuilder texto = new StringBuilder("<html>");
        
        for(ContaCorrente conta : contas){
            texto.append("Titular: " + conta.getTitular() + " - Numero: " + conta.getNumero() + " - Saldo: " + conta.getSaldo() + "<br>");
        }
        
        texto.append("<html>");
        
        LabelContas.setText(texto.toString());
    }
    
    private void MostrarContas(){
        ArrayList<ContaCorrente> contas = contaService.lerContas();
        Predicate<ContaCorrente> MarMaior5000 = 
                conta -> conta.saldo > 5000 && conta.saldo % 2 == 0;
        
        System.out.println("Contas com saldo par e maior que 5000:\n");
        
        contas.stream()
                .filter(MarMaior5000)
                .forEach(conta -> System.out.println("Titular: " + conta.getTitular() + " - Numero: " + conta.getNumero() + " - Saldo: " + conta.getSaldo()));
        
        Comparator<ContaCorrente> porSaldo = Comparator.comparing(ContaCorrente::getSaldo).reversed();
        
        System.out.println("\nContas em ordem decrescente:\n");
        contas.stream()
                .sorted(porSaldo)
                .forEach(conta -> System.out.println("Titular: " + conta.getTitular() + " - Numero: " + conta.getNumero() + " - Saldo: " + conta.getSaldo()));

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincinal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FilterButton;
    private javax.swing.ButtonGroup FiltroButtonGroup;
    private javax.swing.JTextField InputTexto;
    private javax.swing.JLabel LabelContaSelecionada;
    private javax.swing.JLabel LabelContas;
    private javax.swing.JRadioButton acima10000;
    private javax.swing.JRadioButton ate10000;
    private javax.swing.JRadioButton ate5000;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
